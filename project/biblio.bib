@online{pykka,
	title = {{Pykka}},
	author = {{Stein Magnus Jodal et al.}},
	url = {https://pykka.readthedocs.io/en/stable/},
	note = {Accessed 2022-01-31}
}

@article{fischer_impossibility_nodate,
	title = {Impossibility of {Distributed} {Consensuswith} {One} {Faulty} {Process}},
	abstract = {The consensusproblem involves an asynchronous system of processes,some of which may be unreliable. The problem is for the reliable processesto agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.},
	language = {en},
	author = {Fischr, J and Lynch, A},
	pages = {9},
	year = 1983,
	journal = {}
}

@online{akka,
	title        = {{Akka}},
	author       = {{Lightbend, Inc.}},
	url          = {https://akka.io/},
	organization = {{Lightbend, Inc.}},
	note         = {Accessed 2022-01-31}
}

@article{ongaro_search_nodate,
	title = {In {Search} of an {Understandable} {Consensus} {Algorithm}},
	abstract = {Raft is a consensus algorithm for managing a replicated log. It produces a result equivalent to (multi-)Paxos, and it is as efﬁcient as Paxos, but its structure is different from Paxos; this makes Raft more understandable than Paxos and also provides a better foundation for building practical systems. In order to enhance understandability, Raft separates the key elements of consensus, such as leader election, log replication, and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered. Results from a user study demonstrate that Raft is easier for students to learn than Paxos. Raft also includes a new mechanism for changing the cluster membership, which uses overlapping majorities to guarantee safety.},
	language = {en},
	year = {2014},
	journal = {Proceedings of USENIX ATC ’14: 2014 USENIX Annual Technical Conference},
	author = {Ongaro, Diego and Ousterhout, John},
	pages = {16}
}

@article{lamport_part-time_1998,
	title = {The part-time parliament},
	volume = {16},
	issn = {0734-2071, 1557-7333},
	url = {https://dl.acm.org/doi/10.1145/279227.279229},
	doi = {10.1145/279227.279229},
	abstract = {Recent archaeological discoveries on the island of Paxos reveal that the parliament functioned despite the peripatetic propensity of its part-time legislators. The legislators maintained consistent copies of the parliamentary record, despite their frequent forays from the chamber and the forgetfulness of their messengers. The Paxon parliament's protocol provides a new way of implementing the state machine approach to the design of distributed systems.},
	language = {en},
	number = {2},
	urldate = {2022-01-19},
	journal = {ACM Transactions on Computer Systems},
	author = {Lamport, Leslie},
	month = may,
	year = {1998},
	pages = {133--169},
	file = {Lamport - 1998 - The part-time parliament.pdf:/Users/matte/.zotero/storage/6ZJLNRWJ/Lamport - 1998 - The part-time parliament.pdf:application/pdf},
}e
